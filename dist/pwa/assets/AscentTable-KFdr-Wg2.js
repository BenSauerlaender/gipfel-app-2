import{$ as v,r as b,b as x,D as A,ac as k,Q as f,R as i,S as l,U as r,a4 as p,W as n,ar as _,X as d,V as h,a2 as w}from"./index-DaOUFlu6.js";import{Q as S}from"./QInput-DTawV6SM.js";import{a as o,Q as D}from"./QTable-dd889t0K.js";import{s as Q,g as $}from"./dataStore-BHpDpTQA.js";import{_ as I,a as V,b as G}from"./RouteGradeChip-B2f33nGS.js";const N={key:1},B={key:1},C={__name:"AscentTable",props:{ascents:{type:Array,required:!0},columns:{type:Array,default:()=>["date","route","summit","region","grade","stars","unsecure","ascentType","climbers","isAborted","notes"]},defaultSort:{type:Array,default:()=>["date","desc"]}},setup(g){const u=g,m=b(null),c=b(""),y=[{name:"date",label:"Datum",field:"date",align:"left",sortable:!0},{name:"route",label:"Weg",field:t=>t.route?.name,align:"left",sortable:!0},{name:"summit",label:"Gipfel",field:t=>t.route?.summit?.name,align:"left",sortable:!0},{name:"region",label:"Gebiet",field:t=>t.route?.summit?.region?.name,align:"left",sortable:!0},{name:"grade",label:"Grad",field:t=>$(t.route)??"-",align:"center",sortable:!0,sort:Q},{name:"stars",label:"Sterne",field:t=>t.route?.stars,align:"center",sortable:!0},{name:"unsecure",label:"!",field:t=>t.route?.unsecure,align:"left",sortable:!0},{name:"ascentType",label:"Art",field:t=>t.ascentType,align:"left",sortable:!0},{name:"climbers",label:"Kletterer",field:t=>t.climbersText,align:"left",sortable:!0},{name:"isAborted",label:"Abgebrochen",field:t=>t.isAborted?"X":"",align:"center",sortable:!0},{name:"notes",label:"Notizen",field:t=>t.notes,align:"left",sortable:!0}].filter(t=>u.columns.includes(t.name)),T=x(()=>u.ascents.map(a=>(a.leadClimber&&(a.ascentType="Kl."),a.isSolo&&(a.ascentType="solo"),a.isTopRope&&(a.ascentType="v.o.g"),a.climbersText="",a.climbers.forEach(s=>{s.isAborted?a.climbersText+="("+s.firstName+")":a.climbersText+=s.firstName,a.climbersText+=", "}),a.climbersText=a.climbersText.slice(0,-2),a)));return A(()=>{m.value.sort(u.defaultSort[0]),u.defaultSort[1]=="desc"&&m.value.sort(u.defaultSort[0])}),(t,a)=>{const s=k("router-link");return i(),f(D,{rows:T.value,columns:w(y),"row-key":"_id",style:{height:"800px"},"virtual-scroll":"","rows-per-page-options":[0],"binary-state-sort":"",flat:"",filter:c.value,ref_key:"ascentsTable",ref:m},{"top-right":l(()=>[r(S,{borderless:"",dense:"",debounce:"300",modelValue:c.value,"onUpdate:modelValue":a[0]||(a[0]=e=>c.value=e),placeholder:"Search"},{append:l(()=>[r(h,{name:"search"})]),_:1},8,["modelValue"])]),"body-cell-date":l(e=>[r(o,{props:e},{default:l(()=>[n(d(new Date(e.value).toLocaleDateString("de-DE")),1)]),_:2},1032,["props"])]),"body-cell-summit":l(e=>[r(o,{props:e},{default:l(()=>[r(s,{style:{"text-decoration":"none",color:"inherit"},to:`/summits/${e.row.route.summitID}`},{default:l(()=>[n(d(e.value),1)]),_:2},1032,["to"])]),_:2},1032,["props"])]),"body-cell-region":l(e=>[r(o,{props:e},{default:l(()=>[r(s,{style:{"text-decoration":"none",color:"inherit"},to:`/regions/${e.row.route.regionID}`},{default:l(()=>[n(d(e.value),1)]),_:2},1032,["to"])]),_:2},1032,["props"])]),"body-cell-route":l(e=>[r(o,{props:e},{default:l(()=>[r(s,{style:{"text-decoration":"none",color:"inherit"},to:`/routes/${e.row.route._id}`},{default:l(()=>[n(d(e.value),1)]),_:2},1032,["to"])]),_:2},1032,["props"])]),"body-cell-climbers":l(e=>[r(o,{props:e},{default:l(()=>[n(d(e.value),1)]),_:2},1032,["props"])]),"body-cell-grade":l(e=>[r(o,{props:e},{default:l(()=>[_([e.value],()=>r(G,{grade:e.value},null,8,["grade"]),a,1)]),_:2},1032,["props"])]),"body-cell-stars":l(e=>[r(o,{props:e},{default:l(()=>[e.value>0?_([e.value],()=>(i(),f(V,{key:0,stars:e.value},null,8,["stars"])),a,2):(i(),p("span",N,"-"))]),_:2},1032,["props"])]),"body-cell-unsecure":l(e=>[r(o,{props:e},{default:l(()=>[e.value?(i(),f(I,{key:0},{default:l(()=>a[3]||(a[3]=[n("-")])),_:1,__:[3]})):(i(),p("span",B,"-"))]),_:2},1032,["props"])]),_:1},8,["rows","columns","filter"])}}},W=v(C,[["__scopeId","data-v-b5a1aad0"]]);export{W as A};
